Types of variables with respect to their scope:
There are 3 types of variables w.r.t. their scope.
1) local variables.
2) instance variables.
3) static variables.

Local variables:
A variable that is created inside a method, loop, switch case or any block of code is called local variable.
 //Local V occupy the computers memory for the shortest amount of time.
 We should always go with local v if it is possible.
    A local variable cannot be defined with "static" keyword.

Let's take an example:
void bark() {
        int i = 4; //local
        for (int j = 0; j < i; j++) {
            System.out.println("Barking..");
        }
    }
 But they are limited in scope
  It is possible to access local variables only inside the method or constructor or blocks only, it is not possible to
    access outside of method or constructor or blocks.


   Instance variables:
    They are declared outside a block of code but inside a class.
       We can use these v. inside any block of code that is inside that class.

   When we should use IV:
      1) when we need to share a value between 2 or more methods
      2) When we are planning to create multiple objects of a class and it is possible that all the objects can have a
       different VALUE for that variablE.
  Why the name of v is instance: because each instance of the class (that is, each object of the class) contains its own
   copy of these variables.

    Let's take an example:
    We create class. inside that class create a variable, for example string name. Then we create and call dif. objects
    girl. boy, men, woman, and each of them will have their own value of this variable "name".
So the value of variable for each object will be separate and unique from the value (data) for another and is not
shared among instances(other objets).

   //They occupy the memory for longer as compared to local v.

   STATIC variables:
   If an instance variable has a keyword static is called a static variable.
   but it's created  outside  a  method, constructor or a block.
   It cannot be local.
     // They occupy the memory for the longest period.
    When we should use S.V.:
          When we want to share something across all the methods.
         When we want to share data across the objects.

         When we use the static variable for the property - that is common to all objects.
     Let's take an example:
      We create a class Student, all students (subclasses can have instance variables with it's own values)and at the
      same time we create a static variable (for example name of college),shares the same college name to all students.

        -local is used only within block of code (within METHOD)
          -instance is declared inside a class (within CLASS)
          -Static v - we use AcROSS THE METHOD ACROSS THE CLASS
