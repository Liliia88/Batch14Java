String Methods:
String is the most widely used class in Java.
We can use it to store text based data.

Methods in Java:
is simple a block of code or some java statements put together in a block.

Exclude packaeges:
Double click the shift button twice quickly and type exclude and hit enter from the pop-up window click on the plus
button ans select the packages that you want to exclude.

How Java code is complided/executed on a computer:
We write the code on files with extension. java
Once we hit the run button a software program called compiler checks this code for errors and convert it to byte code.
usually stored in a folder called bin/out.
JVM another software further convert this code to binary code and this binary code is what is excluded on your computers.

Method is block of code or some java statements (any java code which ends with semimethod) grouped together.

Why we should learn about methods?
-M.help us reduce amount of code that we have to write. For example, of a piece of code is being repeated, we can create
a M for it and simple call that M whenever we need that logic again.

Syntax of creating a M:
we can create M only inside a class.
[dataype] [method name] [(datatype variableName)] [method body]
[datatype] can be void boolean String int etc.
[method name] They are variable names.
[(datatype variableName)] used to pass data while callinga method.

How do we decide that we should use void or method with w return keyword1:
-If we are building a M that will be used by others or in other parts of your code which require some data from your M
like an if condition we should not create M with void type.

String st="hello";
if(!str.isEmpty()&&length%2!=0&&length>=3) {

int middleIndex=length/2;
System.out.println(str.charAt(middleIndex));
}

Types of variables with respect to their scope:
There are 3 types of variables w.r.t. their scope.
1) local variables.
2) instance variables.
3) static variables.

Local variables:
A variable that is created inside a method loop switch case or any block of code is called local variable.
-When we should use loval variables:
 Local V occupy the computers memory for the shortest amount of time.
 We should always go with local v if it is possible.
 But they are limited in scope we can't use local v outside of that block in which they are declared.

void bark() {
        int i = 4; //local
        for (int j = 0; j < i; j++) {
            System.out.println("Barking..");
        }
    }

Instance variables:
    Which are declared outside a black of code but inside a class are called instance variables.
When we should use IV:
    When we are planning to create multiple obj of a class,or we want to share something in multiple methods
 we should go with instance v.
They occupy the memory for longer as compared to local v.

 STATIC variables:
    If an instance variable has a keyword static is called a static variable.
When we should use S.V.:
When we need to share something

    -local is used only within block of code (within METHOD)
    -instance is declared inside a class (within CLASS)
    -Static v - we use AcROSS THE METHOD ACROSS THE CLASS

    Review:
  LOCAL VARIABLES:
    -if a v. is declared inside a block of code like method, loop, if-condition they are called l.v.
  Up-Side of a l.v.:
    -The upside is they exist for a very short amount of time in the memory, which means other programs on our computer
    can use that memory.
  Down-Side of l.v.:
     Their scope is very limited, only inside that block in which they are created. we can't access them outside that
  block.
  When to use:
     We should always try to use local v. over instance v. whenever it is possible.
  INSTANCE VARIABLES:
     The v. which are declared inside a class but outside of block of code are called instance v.
  Up-side:
     We can use these v. inside any block of code that is inside that class.
  Downside:
    They occupy the memory for longer than a local variable.
    When we should use I.V.:
    1) when we need to share a value between 2 or more methods then we should go with i.v.
    2) When we are planning to create multiple objects of a class and it is possible that all the objects can have a different
    for that variable.

  STATIC VARIABLE:
    An instance v. with static keyword is called a static variable.
  Up-side:
    We can share data across the objects with the help of static variables.
  Down-side:
    They occupy the memory for the longest period.
    When to use:
When we want ot shar something across all the methods.

Access Modifiers:
    Access modifiers are keywrods in java that control the access of methods fields or the class itself.
    There are four access levels.
Private:
    If something has the access level of private that thing can only be accessed within the same class. This acess
    level is the most restricted one. For fields/properties/state of a class, we should always try to have private
    access level so that the data of a class is secured.
Default:
    Default is not a keyword. it's an access level. if we don't use any keyword with fields or methods java applies
     the dafault access
    level automatically. Once applied we can access those entities within the same class as well as in any class
    within teh same package.
Protected:
    When applied entities can be accessed outside the package as well but only on the class that have parent-child
    relationship, only when classes have inheritance (subclass and class). default it is not visible in other package,
    just inside one package.

Public:
     When the public access modifier is applied to an entity that entity can be accessed anywhere inside that
     project.
     Usually the classes itself and methods are declared as public.
Note:
If we are inside the same class we can call a method inside another by just writing its name. But we need
to take care that these methods are both either static or non-static.

void -  mojet prinimat parametri ili ne prinimat/ no eto ne szyazano
 s tem chto on ne vozvrashaet dannie.
lubaya funkciya mojet prinimat parametri/ ne vajno vozvrashaet ili net dannie....